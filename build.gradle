plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'  // плагин для создания исполняемых файлов
}

group 'com.example'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.winapplication'
    mainClass = 'com.example.winapplication.WinApplication'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'WinApplication' // Наименование для вашего исполняемого приложения
    }

    jpackage() {
        if (org.gradle.internal.os.OperatingSystem.current().windows) { // Можно настраивать в зависимости от платформы
            imageOptions += ['--icon', 'icon.ico'] // Иконка вашего исполняемого приложения
        }
        imageOptions += ['--vendor', 'MyCompany' // Производитель
        ]
        installerOptions += [
                '--vendor', 'MyCompany', // Производитель
                '--app-version', version // Версия вашего исполняемого приложения
        ]
    }
}

jlinkZip {
    group = 'distribution'
}